pipeline {
  agent { label 'default' } // використовує podTemplate з JCasC

  options {
    timestamps()
    ansiColor('xterm')
    disableConcurrentBuilds()
  }

  environment {
    // ECR: краще брати з Jenkins Credentials (type: Secret text) під ID 'ECR_URI'
    // або підкласти як Global env у контролері. IRSA забезпечить авторизацію.
    AWS_REGION = credentials('AWS_REGION')  // якщо є; інакше приберіть
    ECR_URI    = credentials('ECR_URI')     // наприклад: 123456789012.dkr.ecr.us-east-1.amazonaws.com/django-app

    SAFE_BRANCH = "${env.BRANCH_NAME?.replaceAll(/[^A-Za-z0-9_.-]/, '-') ?: 'main'}"
    IMAGE_TAG   = "${SAFE_BRANCH}-${env.BUILD_NUMBER ?: '0'}"

    // GitOps (SSH краще за HTTPS для приватних репо)
    GITOPS_REPO_SSH   = 'git@github.com:DanSport/DevOps.git'
    GITOPS_BRANCH     = 'main'
    GITOPS_CHART_PATH = 'Progect/charts/django-app'
    GIT_CRED_ID       = 'gitops-ssh'
  }

  stages {
    stage('Checkout source') {
      steps {
        checkout scm
        sh 'git config --global --add safe.directory "$PWD"'
      }
    }

    stage('Build & Push (Kaniko → ECR)') {
      steps {
        container('kaniko') {
          sh '''#!/usr/bin/env bash
            set -euo pipefail

            test -f Dockerfile || { echo "❌ Dockerfile not found"; exit 1; }

            /kaniko/executor \
              --context="$PWD" \
              --dockerfile="$PWD/Dockerfile" \
              --destination="${ECR_URI}:${IMAGE_TAG}" \
              --destination="${ECR_URI}:latest" \
              --single-snapshot \
              --cache=true \
              --cache-ttl=48h
          '''
        }
      }
    }

    stage('Clone GitOps & Bump tag') {
      steps {
        sshagent (credentials: [env.GIT_CRED_ID]) {
          sh '''#!/usr/bin/env bash
            set -euo pipefail

            rm -rf gitops && mkdir -p gitops
            git clone --branch "${GITOPS_BRANCH}" --depth 1 "${GITOPS_REPO_SSH}" gitops

            values_file="gitops/${GITOPS_CHART_PATH}/values.yaml"
            test -f "$values_file" || { echo "❌ $values_file not found"; exit 1; }

            # якщо доступний yq — коректніше за sed
            if command -v yq >/dev/null 2>&1; then
              yq -i ".image.tag = \"${IMAGE_TAG}\"" "$values_file" || true
              # fallback: часто значення зберігають як 'tag: ...'
              yq -i "(.tag // .image.tag) = \"${IMAGE_TAG}\"" "$values_file" || true
            else
              # акуратний sed: міняємо 'tag:' на наш тег
              sed -i -E 's|^([[:space:]]*tag:[[:space:]]*).*$|\\1"'"${IMAGE_TAG}"'"|' "$values_file" || true
              # або якщо у тебе поле image.tag:
              sed -i -E 's|^([[:space:]]*image:[[:space:]]*\\{?[[:space:]]*tag:[[:space:]]*).*$|\\1"'"${IMAGE_TAG}"'"|' "$values_file" || true
            fi

            pushd gitops
              git config user.email "ci@local"
              git config user.name  "jenkins-ci"
              git add "${GITOPS_CHART_PATH}/values.yaml" || true

              if ! git diff --cached --quiet; then
                git commit -m "ci: bump image tag to ${IMAGE_TAG}"
                git push origin "${GITOPS_BRANCH}"
              else
                echo "ℹ️ nothing to commit (tag unchanged)"
              fi
            popd
          '''
        }
      }
    }
  }

  post {
    success {
      echo "✅ Pushed ${ECR_URI}:${IMAGE_TAG} and updated ${GITOPS_REPO_SSH}:${GITOPS_BRANCH}"
    }
    failure {
      echo "❌ Pipeline failed. Check the logs."
    }
  }
}
