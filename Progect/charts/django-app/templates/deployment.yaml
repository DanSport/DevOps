apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-django-app
  labels:
    app: django-app
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount | default 2 }}
  selector:
    matchLabels:
      app: django-app
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: django-app
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:15
          command:
            - sh
            - -c
            - >
              until pg_isready -h {{ .Values.env.POSTGRES_HOST }} -p {{ .Values.env.POSTGRES_PORT }} -t 2;
              do echo "waiting for db"; sleep 2; done
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          workingDir: /app/django_app
          command: ["sh","-lc","python manage.py migrate --noinput"]
          envFrom:
            - configMapRef:
                name: {{ include "django-app.fullname" . }}-config
            - secretRef:
                name: {{ .Values.database.secretName | default "django-db-secret" }}
      containers:
        - name: django-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          workingDir: /app/django_app
          command: ["/venv/bin/gunicorn","--bind","0.0.0.0:8000","core.wsgi:application"]
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: {{ include "django-app.fullname" . }}-config
            - secretRef:
                name: {{ .Values.database.secretName | default "django-db-secret" }}
          readinessProbe:
            httpGet:
              path: {{ .Values.health.path | default "/admin/login/" }}
              port: 8000
            initialDelaySeconds: {{ .Values.health.readinessInitialDelay | default 5 }}
            periodSeconds: {{ .Values.health.readinessPeriod | default 5 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.health.path | default "/admin/login/" }}
              port: 8000
            initialDelaySeconds: {{ .Values.health.livenessInitialDelay | default 20 }}
            periodSeconds: {{ .Values.health.livenessPeriod | default 10 }}
          resources:
            {{- toYaml (.Values.resources | default dict) | nindent 12 }}
